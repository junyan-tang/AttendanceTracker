/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

javafx {
    version = "22.0.1"
    
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Spring Boot Starter for general Spring Boot capabilities
    implementation 'org.springframework.boot:spring-boot-starter'

    // Spring Boot Starter for web applications
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Boot Starter for JPA (if you are using database interactions)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.6.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.3.4.RELEASE'
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'org.mindrot:jbcrypt:0.4'

    
}

application {
    // Define the main class for the application.
    mainClass = 'edu.duke.ece651.team4.JavafxInterf.MainApp'
}

run{
    standardInput = System.in
    standardOutput = System.out
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
